
-- Can not get Nvidia display card to work. 
# Nvidia GeForce GTX 1050 Micro-Star International Co., Ltd. [MSI] Device [1462:8c93] 

Nvidia kernel driver is not loaded with CUDA 9.
Use CUDA 8. It works.


Connect smb share.
Download linux cuda toolkit.
( Install nvidia driver. )
 $ sudo apt-get update
 ($ sudo apt-get install nvidia-375)
 $ sudo apt-get install nvidia-384
	NOTE: There is conflicts. Use 'aptitude' to exam them.

Reboot -- Make sure nvidia driver is used for the card.

 $ sudo apt-get install linux-headers-$(uname -r)

 $ cd /mnt/software-share/linux/cuda/
 ($ sudo dpkg -i cuda-repo-ubuntu1604-9-1-local_9.1.85-1_amd64)
 ($ sudo apt-key add /var/cuda-repo-9-1-local/7fa2af80.pub)
 $ sudo dpkg -i cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
 $ sudo apt-get update
 $ sudo apt-get install cuda

 ( set
   PATH="...:/usr/local/cuda/bin"
   LD_LIBRARY_PATH="/usr/lib/nvidia-384/"
 )

 $ nvcc --version
 $ /usr/local/cuda/bin/nvcc --version
 $ nvidia-smi
 
 $ nano /usr/local/cuda/samples/3_Imaging/cudaDecodeGL/findgllib.mk
   ( modify UBUNTU_PKG_NAME = "nvidia-375" to "nvidia-384" )
 
 $ cd /usr/local/cuda/samples
 $ sudo make
 $ ./bin/x86_64/linux/release/deviceQuery
 $ ./bin/x86_64/linux/release/bandwidthTest



http://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html

http://xcat-docs.readthedocs.io/en/stable/advanced/gpu/nvidia/verify_cuda_install.html


--
https://askubuntu.com/questions/799184/how-can-i-install-cuda-on-ubuntu-16-04

Update system PATH in .bashrc
export PATH=$PATH:/usr/local/cuda/bin
--

https://askubuntu.com/questions/261760/setting-global-environment-variable-for-everyone
 $ sudo nano /etc/environment
--


https://askubuntu.com/questions/902636/nvidia-smi-command-not-found-ubuntu-16-04
In my case, just disabling secure boot in the BIOS solved the problem.
--



----------------------------
ERROR : sudo make
---------------------
/usr/bin/ld: cannot find -lnvcuvid
collect2: error: ld returned 1 exit status
Makefile:381: recipe for target 'cudaDecodeGL' failed
make[1]: *** [cudaDecodeGL] Error 1
make[1]: Leaving directory '/usr/local/cuda-8.0/samples/3_Imaging/cudaDecodeGL'
Makefile:52: recipe for target '3_Imaging/cudaDecodeGL/Makefile.ph_build' failed
make: *** [3_Imaging/cudaDecodeGL/Makefile.ph_build] Error 2
lordmike@lordmike-Standard-PC-Q35-ICH9-2009:/usr/local/cuda/samples$ 




https://askubuntu.com/questions/891003/failure-in-running-cuda-sample-after-cuda-8-0-installation


$ find /usr/ -name libnvcuvid.*
  /usr/lib/nvidia-384/libnvcuvid.so


$ echo $LD_LIBRARY_PATH
  /usr/local/cuda-8.0/lib64:/usr/local/cuda-8.0/lib64




https://github.com/dusty-nv/jetson-inference/issues/180

"I had this same issue and resolve it by modifying UBUNTU_PKG_NAME = "nvidia-375" to "nvidia-390".
Because my system installed "nvidia-390" driver.
(I found this fact when looked up /usr/lib/ directory)"

$ nano /usr/local/cuda/samples/3_Imaging/cudaDecodeGL/findgllib.mk




----------------------------

lordmike@lordmike-Standard-PC-Q35-ICH9-2009:/usr/local/cuda/samples$ ./bin/x86_64/linux/release/deviceQuery
./bin/x86_64/linux/release/deviceQuery Starting...

 CUDA Device Query (Runtime API) version (CUDART static linking)

Detected 1 CUDA Capable device(s)

Device 0: "GeForce GTX 1050"
  CUDA Driver Version / Runtime Version          9.0 / 8.0
  CUDA Capability Major/Minor version number:    6.1
  Total amount of global memory:                 1999 MBytes (2096168960 bytes)
  ( 5) Multiprocessors, (128) CUDA Cores/MP:     640 CUDA Cores
  GPU Max Clock rate:                            1519 MHz (1.52 GHz)
  Memory Clock rate:                             3504 Mhz
  Memory Bus Width:                              128-bit
  L2 Cache Size:                                 1048576 bytes
  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)
  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers
  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers
  Total amount of constant memory:               65536 bytes
  Total amount of shared memory per block:       49152 bytes
  Total number of registers available per block: 65536
  Warp size:                                     32
  Maximum number of threads per multiprocessor:  2048
  Maximum number of threads per block:           1024
  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)
  Run time limit on kernels:                     No
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing (UVA):      Yes
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 9.0, CUDA Runtime Version = 8.0, NumDevs = 1, Device0 = GeForce GTX 1050
Result = PASS





